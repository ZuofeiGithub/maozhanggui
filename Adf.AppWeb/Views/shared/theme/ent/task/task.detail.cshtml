@using Adf.FrameWork.Service
@using Adf.FrameWork.Service.LayUi
@using CYQ.Data.Table
@using Decoration.Service
@{

    /******************************************************************************************
     * 功能：实施任务详细页
     * 2018-10-19  创建人 顾健
     *******************************************************************************************/

    /*系统参数*/
    Layout = "../master/master.detail.cshtml";
    MDataTable curGlobalUserPermission = ViewBag.GlobalUserPermission ?? new MDataTable();
    String curGlobalAdminResPath = ViewBag.GlobalAdminResPath ?? "";
    String curDoCmd = ViewBag.CurrentCmd;

    /*当前业务*/
    String curController = "/ent/task";
    MDataRow curDrMainEntity = ViewBag.MainEntity ?? new MDataRow();
    MDataTable curtaskCate = ViewBag.taskCate ?? new MDataTable();


}

<!--页面数据-->
@section FormBody
{
    @using (Html.LayUiStdContainer(new LayUiContainerAttr() { LayUiContainerType = LayUiContainerType.FormItem }))
    {
        @Html.LayUiStdLabel(new LayUiLabelAttr() { Caption = "任务名称" })
        using (Html.LayUiStdContainer(new LayUiContainerAttr() { LayUiContainerType = LayUiContainerType.InputInline }))
        {
            @Html.LayUiStdInput(new LayUiInputAttr() { Id = "taskname", Name = "taskname", Val = curDrMainEntity.Get("taskname", "") })
        }
    }
    @using (Html.LayUiStdContainer(new LayUiContainerAttr() { LayUiContainerType = LayUiContainerType.FormItem }))
    {
        @Html.LayUiStdLabel(new LayUiLabelAttr() { Caption = "任务描述" })
        using (Html.LayUiStdContainer(new LayUiContainerAttr() { LayUiContainerType = LayUiContainerType.InputInline }))
        {
            @Html.LayUiStdTextArea(new LayUiTextAreaAttr() { Id = "taskdes", Name = "taskdes", Val = curDrMainEntity.Get("taskdes", "") })
        }
    }

    @using (Html.LayUiStdContainer(new LayUiContainerAttr() { LayUiContainerType = LayUiContainerType.FormItem }))
    {
        @Html.LayUiStdLabel(new LayUiLabelAttr() { Caption = "开始时间" })
        using (Html.LayUiStdContainer(new LayUiContainerAttr() { LayUiContainerType = LayUiContainerType.InputInline }))
        {
            @Html.LayUiStdInput(new LayUiInputAttr() { Id = "taskstartdate", Name = "taskstartdate", Val = DecorationService.Initdate(curDrMainEntity.Get("taskstartdate", "")) })
        }
    }
    @using (Html.LayUiStdContainer(new LayUiContainerAttr() { LayUiContainerType = LayUiContainerType.FormItem }))
    {
        @Html.LayUiStdLabel(new LayUiLabelAttr() { Caption = "结束时间" })
        using (Html.LayUiStdContainer(new LayUiContainerAttr() { LayUiContainerType = LayUiContainerType.InputInline }))
        {
            @Html.LayUiStdInput(new LayUiInputAttr() { Id = "taskenddate", Name = "taskenddate", Val = DecorationService.Initdate(curDrMainEntity.Get("taskenddate", "")) })
        }
    }
    @using (Html.LayUiStdContainer(new LayUiContainerAttr() { LayUiContainerType = LayUiContainerType.FormItem }))
    {
        @Html.LayUiStdLabel(new LayUiLabelAttr() { Caption = "阶段天数" })
        using (Html.LayUiStdContainer(new LayUiContainerAttr() { LayUiContainerType = LayUiContainerType.InputInline }))
        {
            @Html.LayUiStdInput(new LayUiInputAttr() { Id = "taskdays", Name = "taskdays", Val = curDrMainEntity.Get("taskdays", "") })
        }
    }

<div id="panel3" class="layui-col-md8 layui-col-md6 layui-col-xs12">
    <div class="layui-form-item">
        <label class="layui-form-label">缩略图</label>
        <div class="layui-input-block">
            @Html.LayUiStdInput(new LayUiInputAttr() { Id = "thumbnail",Name= "thumbnail", Val = curDrMainEntity.Get("thumbnail", ""),IsReadOnly=true })
            @Html.LayUiStdButton(new LayUiButtonAttr() { Id = "btnUploadSmallImage", Caption = "上传", LayUiButtonTheme = LayUiButtonTheme.Normal })
            @Html.LayUiStdButton(new LayUiButtonAttr() { Id = "btnDelSmallImage", Caption = "删除", LayUiButtonTheme = LayUiButtonTheme.Normal })
            @Html.LayUiStdButton(new LayUiButtonAttr() { Id = "btnViewSmallImage", Caption = "查看", LayUiButtonTheme = LayUiButtonTheme.Normal })
        </div>
    </div>
</div>


    @Html.Hidden("taskstatus", curDrMainEntity.Get("taskstatus", ""))
    @Html.Hidden("projectcode", curDrMainEntity.Get("projectcode", ""))
    @Html.Hidden("catecode", curDrMainEntity.Get("catecode", ""))
    @Html.Hidden("taskcode", curDrMainEntity.Get("taskcode", ""))


}

<!--操作按钮-->
@section FormButton
{
    @Html.LayUiStdButtonPerssionSubmit(curGlobalUserPermission, "save", "btnSubmit", LayUiButtonTheme.Danger)
    <button class="save layui-btn-warm layui-btn" lay-filter="btnSubmit" lay-submit="">保存</button>
    @Html.LayUiStdButton(new LayUiButtonAttr() { Id = "btnClose", Caption = "关闭", LayUiButtonTheme = LayUiButtonTheme.Normal })
}

<!--js-->
@section MainBottom
{
    <script>
        layui.use('laydate',
            function() {
                var laydate = layui.laydate;
                laydate.render({
                    elem: "#taskstartdate"
                });
                laydate.render({
                    elem: "#taskenddate"
                });
            });
        layui.config({
            base: '@curGlobalAdminResPath/layuiadmin/lib/' //静态资源所在路径
        }).use(['layer', 'form', 'adfCommon', 'element', 'upload'], function () {
            var layer = layui.layer,
                form = layui.form,
                upload = layui.upload,
                adfCommon = layui.adfCommon;
            adfCommon.uploadImage("#btnUploadSmallImage", upload, function (retData) {
                if (retData.hasOwnProperty("ServerRelativeFileName")) {
                    $("#thumbnail").val(retData.ServerRelativeFileName);
                } else {
                    adfCommon.alert("图片上传失败");
                }
            });
            /*保存*/
            form.on('submit(btnSubmit)', function (obj) {
                var sUrl = "@curController/execute?docmd=@curDoCmd";
                var param = obj.field;
                adfCommon.ajaxSyncPost(sUrl, param, function (retData) {
                    adfCommon.msgDo(retData.RetValue, function () {
                        if (retData.RetStatus == 100 || retData.RetStatus == 101) {
                            //刷新父级数据
                            parent.curRetDoCmd = retData.RetStatus;
                            parent.globalData = retData;
                            //关闭当前窗口
                            adfCommon.dlgClose();
                        }
                    });
                }, function () {
                    adfCommon.alert("网络存在异常,请重试");
                });
            });

            /*关闭*/
            $("#btnClose").click(function () {
                adfCommon.dlgClose();
            });
            //---------------------
            function checkEmptyImg(e) {
                var url = e.val();
                if (url == "") { layer.msg("请先上传图片"); return false; }
                return true;
            }
            function delImg(e) {
                layer.confirm("确定删除图片吗？", function (index) {
                    var param = { filename: escape(e.val()) }
                    var url = "/ent/product/DelUploadFile";
                    $.getJSON(url, param, function (d) {
                        console.log(d);
                        layer.msg(d.RetValue);
                        if (d.RetStatus == 200) { e.val(""); }
                        layer.close(index);
                    });
                });
            }
            function viewImg(e) {
                var url = e.val();
                top.layer.open({
                    area: ["90%", "90%"],
                    content: '<img src="' + url + '" />'
                });
            }
            $("#btnDelSmallImage").on("click", function () {
                var e = $("#thumbnail");
                if (!checkEmptyImg(e)) { return; }
                delImg(e);
            });
            $("#btnViewSmallImage").on("click", function () {
                var e = $("#thumbnail");
                if (!checkEmptyImg(e)) { return; }
                viewImg(e);
            });
        });
    </script>
}

