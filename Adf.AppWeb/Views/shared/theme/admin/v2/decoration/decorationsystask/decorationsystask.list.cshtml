@using Adf.FrameWork.Interface.Entity
@using Adf.FrameWork.Service.HtmlHelperEx
@using CYQ.Data.Table
@using Adf.FrameWork.Service.LayUi
@using Decoration.Service
@{
    /*
  * 功能：平台任务
  * 创建人：张硕
  * 创建时间：2018-11-13
  * /
  /*系统参数*/
    Layout = "~/Views/shared/theme/admin/master/v2/master.list.cshtml";
    MDataRow curGlobalApp = ViewBag.GlobalApp ?? new MDataRow();
    MDataRow curGlobalUserLogin = ViewBag.GlobalUserLogin ?? new MDataRow();
    String curGlobalUserCode = ViewBag.GlobalUserCode ?? "";
    String curGlobalModuleCode = ViewBag.GlobalModuleCode ?? "";
    MDataTable curGlobalUserPermission = ViewBag.GlobalUserPermission ?? new MDataTable();
    MDataRow curGlobalModuleEntity = ViewBag.GlobalModuleEntity ?? new MDataRow();
    String curGlobalAdminResPath = ViewBag.GlobalAdminResPath ?? "";
    String curGlobalCompanyCode = ViewBag.GlobalCompanyCode ?? "";
    /*页面参数*/
    String curController = "/manage/decorationsystaskmng";

    MDataTable cateTable = new MDataTable();


    MDataTable template = ViewBag.curTemplateTable ?? new MDataTable();



}
@section MainHeader{
    <style>
        .layui-card-header .layui-input {
            padding-right: 10px;
        }

        .layuiselect {
            width: 200px;
        }
    </style>

}
@section MainQuery
{
    <div class="layui-form">
        <div class="layui-inline">
            <label class="layui-form-label">任务名称:</label>
            <div class="layui-inline">
                @Html.LayUiInput("taskname", "taskname")
            </div>
        </div>
        <div class="layui-inline ">
            <label class="layui-form-label">
                所属模板:
            </label>
            <div class="layui-inline">
                @Html.LayUiStdSelect(new LayUiSelectAttr() { Id = "templatecode", DataType = "db", Val = "", ClassName = "layui-input layui-unselect layuiselect", DtSource = template, ValueFieldName = "templatecode", TextFieldName = "templatename", ExtHtmlAttributes = new { lay_filter = "templatecode" } })

            </div>
        </div>
        <div class="layui-inline">
            <label class="layui-form-label">任务类型:</label>
            <div class="layui-inline">
                @Html.LayUiStdSelect(new LayUiSelectAttr() { Id = "catecode", DataType = "db", Val = "", ClassName = "layui-input layui-unselect layuiselect", DtSource = cateTable, ValueFieldName = "catecode", TextFieldName = "catename" })

            </div>
        </div>

        <div class="layui-inline">
            <div class="layui-inline">
                @Html.LayUiSamllButton("搜 索", "btnSearch")
            </div>
        </div>
    </div>
}

@section MainTool
{
    @Html.LayUiStdButton(new LayUiButtonAttr() { Caption = "增加", ClassName = "add", LayUiButtonSize = LayUiButtonSize.Xs, LayUiButtonTheme = LayUiButtonTheme.Normal, ExtHtmlAttributes = new { lay_event = "add" } })
}

@section MainTableRowTool
{
    @Html.LayUiStdButton(new LayUiButtonAttr() { Caption = "修改", ClassName = "modify", LayUiButtonSize = LayUiButtonSize.Xs, LayUiButtonTheme = LayUiButtonTheme.Normal, ExtHtmlAttributes = new { lay_event = "modify" } })
    @Html.LayUiStdButton(new LayUiButtonAttr() { Caption = "删除", ClassName = "delete", LayUiButtonSize = LayUiButtonSize.Xs, LayUiButtonTheme = LayUiButtonTheme.Danger, ExtHtmlAttributes = new { lay_event = "delete" } })

}

@section MainBottom
{
    <script>
        var curRetDoCmd = "";

        layui.config({
            base: '@curGlobalAdminResPath/layuiadmin/lib/' //静态资源所在路径
        }).use(['table','layer', 'form', 'adfCommon', 'upload'], function () {
            var table = layui.table,
                layer = layui.layer,
                form = layui.form,
                upload = layui.upload,
                adfCommon = layui.adfCommon;

                /*函数*/
                //重新加载数据
                function reloadData() {
                    //查询条件
                    var sWhere = {};
                    sWhere.taskname = escape($("#taskname").val());
                    sWhere.catecode = escape($("#catecode").val());

                    //重新加载
                    adfCommon.reloadStdTable(table, sWhere);
                }

                /*表格信息*/
                //列
                var colInfo = [
                    [
                        { type: 'checkbox', fixed: 'left' },
                        { field: 'taskname', width: 200, title: '任务名称' },
                        { field: 'catename', width: 150, title: '任务阶段名称' },
                        { field: 'taskdays', width: 90, title: '任务天数' },
                        { field: 'taskremark',  title: '任务内容' },
                        { width: 120, title: '操作', fixed: 'right', toolbar: '#tableRowTool' } //设置固定
                    ]
                ];


                //数据（通过控制器找到getlistdata方法 获取数据）
                var dataUrl = "@curController/GetListData";

                //页面显示20条信息
                var pageSize = 20;

                //初始查询条件
                var sWhere = {};

                //初始化
                adfCommon.setStdTable(table,
                    colInfo,
                    dataUrl,
                    pageSize,
                    sWhere,
                    function(row) {
                        var rowData = row.data;
                        if (row.event == 'modify') {
                            curRetDoCmd = "";
                            var taskcode = rowData.taskcode;
                            var sUrl = "@curController/detail?docmd=modify&mccode=@curGlobalModuleCode&taskcode=" +
                                taskcode;
                            adfCommon.dlgOpen("修改信息",
                                sUrl,
                                '100%',
                                '100%',
                                function() {
                                    if (curRetDoCmd == "101" || curRetDoCmd == "100") {
                                        reloadData();
                                    }
                                });
                        }
                        else if (row.event == 'delete') {
                            layer.confirm('确认要删除吗?',
                                function(index) {
                                    var taskcode = rowData.taskcode;
                                    var sUrl = "@curController/execute?docmd=delete";
                                    var param = {};
                                    param.taskcode = taskcode;
                                    //post提交
                                    adfCommon.ajaxSyncPost(sUrl,
                                        param,
                                        function(retData) {
                                            adfCommon.alert(retData.RetValue);
                                            if (retData.RetStatus == 103) {
                                                //关闭对话框
                                                layer.close(index);
                                                //数据库删除成功后,在界面上进行删除.
                                                row.del();
                                                reloadData();
                                            }
                                        },
                                        function() {});
                                });
                        }
                    });

                /*事件*/
                $(".btnSearch").click(function() {
                    reloadData();
                });


                //增加
                $(".add").click(function() {
                    var sUrl = "@curController/detail?docmd=add&mccode=@curGlobalModuleCode";
                    curRetDoCmd = "";;
                    adfCommon.dlgOpen("增加信息",
                        sUrl,
                        '100%',
                        '100%',
                        function() {
                            if (curRetDoCmd == "100") {
                                reloadData();
                            }
                        });
                });

              //联动，异步获取数据源
            function getCommunityData(templatecode) {
                var jsondata;
                var sUrl = '@curController/execute?docmd=gettaskcate';
                var param = {};
                param.templatecode = templatecode;
                adfCommon.ajaxSyncPost(sUrl, param, function (v) {
                    jsondata = v;
                }, function (e) {
                    console.log(e);
                });
                return jsondata;
            }

            form.on('select(templatecode)', function (d) {
                var optionStr = "<option value=''>-请选择-</option>";
                var templatecode = d.value;
               
                //异步获取数据源
                var catecode = $("#catecode");
                catecode.empty();
                if (d.value == "") {
                    catecode.append(optionStr);
                    form.render("select");
                    return;
                }
                var jsondata = getCommunityData(templatecode);
               
               
                catecode.append(optionStr);
                if (jsondata.rowcount > 0) {
                  
                    for (var i = 0; i < jsondata.rowcount; i++) {
                        var item = jsondata.rows[i];
                        optionStr = "<option value=" + item.catecode + ">" + item.catename + "</option>";
                        catecode.append(optionStr);

                    }
                }
                form.render("select");//重新渲染
            });

            });
    </script>
}
