@using System.Text
@using Adf.Core.Form
@using Adf.FrameWork.Service
@using Adf.FrameWork.Service.AsForm
@using Adf.FrameWork.Service.HtmlHelperEx
@using Adf.FrameWork.Service.LayUi
@using CYQ.Data.Table
@{
    //系统参数
    Layout = "../../../master/v2/master.detail.cshtml";
    MDataRow curGlobalUserLogin = ViewBag.GlobalUserLogin ?? new MDataRow();
    String curGlobalUserCode = ViewBag.GlobalUserCode ?? "";
    String curGlobalModuleCode = ViewBag.GlobalModuleCode ?? "";
    MDataTable curGlobalUserPermission = ViewBag.GlobalUserPermission ?? new MDataTable();
    MDataRow curGlobalModuleEntity = ViewBag.GlobalModuleEntity ?? new MDataRow();
    String curGlobalAdminResPath = ViewBag.GlobalAdminResPath ?? "";

    //当前业务
    String curDoCmd = ViewBag.CurrentCmd;
    String curController = "/manage/module";
    MDataRow curDrMainEntity = ViewBag.DrMainEntity ?? new MDataRow();
    
}

@section MainHeader
{

}

@section FormButton{
    @Html.LayUiStdButtonPerssionSubmit(curGlobalUserPermission, "save")
    @Html.LayUiStdButton(new LayUiButtonAttr(){Id = "btnClose",Caption = "关闭"})
}

@section FormBody
{
    <div class="layui-form-item">
        <label class="layui-form-label">模块编码</label>
        <div class="layui-input-inline">
            @Html.LayUiStdInput(new LayUiInputAttr(){Id = "modulecode",Val = curDrMainEntity.Get("modulecode", ""),VerifyName = "required"})
        </div>
    </div>
    <div class="layui-form-item">
        <label class="layui-form-label">模块名称</label>
        <div class="layui-input-inline">
             @Html.LayUiStdInput(new LayUiInputAttr(){Id = "modulename",Val = curDrMainEntity.Get("modulename", ""),VerifyName = "required"})
        </div>
    </div>
    <div class="layui-form-item">
        <label class="layui-form-label">排序值</label>
        <div class="layui-input-inline">
            @Html.LayUiStdInput(new LayUiInputAttr(){Id = "moduleorder",Val = curDrMainEntity.Get("moduleorder", "")})
        </div>
    </div>
    <div class="layui-form-item">
        <label class="layui-form-label">前置图标</label>
        <div class="layui-input-inline">
            @Html.LayUiStdInput(new LayUiInputAttr(){Id = "moduleicon",Val = curDrMainEntity.Get("moduleicon", "")})
        </div>
    </div>
    <div class="layui-form-item">
        <label class="layui-form-label">是否模块</label>
        <div class="layui-input-inline">
            @Html.LayUiStdSelect(new LayUiSelectAttr(){Id = "moduleismodule",Texts = "-请选择-|否|是", Values = "|0|1",Val = curDrMainEntity.Get("moduleismodule", ""),VerifyName = "required"})
        </div>
    </div>
    <div class="layui-form-item">
        <label class="layui-form-label">模块路径</label>
        <div class="layui-input-inline">
            @Html.LayUiStdInput(new LayUiInputAttr(){Id = "moduleurl",Val = curDrMainEntity.Get("moduleurl", "")})
        </div>
    </div>

    <div class="layui-form-item">
        <label class="layui-form-label">是否显示</label>
        <div class="layui-input-inline">
            @Html.LayUiStdSelect(new LayUiSelectAttr(){Id = "isshow",Texts = "-请选择-|否|是", Values = "|0|1",Val = curDrMainEntity.Get("isshow", ""),VerifyName = "required"})

        </div>
    </div>

    <div class="layui-form-item">
        <label class="layui-form-label">父级模块</label>
        <div class="layui-input-inline">
            @Html.LayUiStdInput(new LayUiInputAttr(){Id = "moduleparentcode",Val = curDrMainEntity.Get("moduleparentcode", ""),VerifyName = "required"})
        </div>
    </div>

}

@section MainBottom
{
    <script>

        layui.config({
            base: '@curGlobalAdminResPath/layuiadmin/lib/' //静态资源所在路径
        }).use(['layer', 'form', 'adfCommon'], function () {
            var layer = layui.layer,
                form = layui.form,
                adfCommon = layui.adfCommon;

            //自定义验证
            form.verify({
                //模块编码
                modulecode: function (value, item) {
                    if (value === "") {
                        return "模块编码不能为空";
                    }
                }
                //模块名称
                , modulename: function (value, item) {
                    if (value === "") {
                        return "模块名称不能为空";
                    }
                }
                //父级模块不能为空
                , moduleparentcode: function (value, item) {
                    if (value === "") {
                        return "父级模块不能为空";
                    }
                }
            });

            //提交表单
            form.on('submit(btnSubmit)', function (obj) {
                var sUrl = "@curController/execute?docmd=@curDoCmd";
                var param = obj.field;
                adfCommon.ajaxSyncPost(sUrl, param, function (retData) {
                    adfCommon.msgDo(retData.RetValue, function () {
                        if (retData.RetStatus == 100 || retData.RetStatus == 101) {
                            //刷新父级数据
                            parent.globalData = retData.RetStatus;
                            //关闭当前窗口
                            adfCommon.dlgClose();
                        }
                    });
                }, function () {
                    adfCommon.alert("网络存在异常,请重试");
                });
            });

            $("#btnClose").click(function () {
                adfCommon.dlgClose();
            });

        });
    </script>
}
